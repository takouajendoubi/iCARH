% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postprocessing.R
\name{iCARH.plotBeta}
\alias{iCARH.plotBeta}
\alias{iCARH.plotTreatmentEffect}
\alias{iCARH.plotPathwayPerturbation}
\alias{iCARH.checkNormality}
\alias{iCARH.waic}
\alias{iCARH.mad}
\title{Postprocess and plot model parameters}
\usage{
iCARH.plotBeta(fit)

iCARH.plotTreatmentEffect(fit)

iCARH.plotPathwayPerturbation(fit, path.names)

iCARH.checkNormality(fit)

iCARH.waic(fit)

iCARH.mad(fit, X)
}
\arguments{
\item{fit}{stan object}

\item{path.names}{pathway names}

\item{X}{the metabolomics time-course data}
}
\value{
the \code{iCARH.plot[*]} functions return a ggplot graph object. \code{iCARH.checkNormality} returns the normalised data.
\code{iCARH.waic} and \code{iCARH.mad} return corresponding waic (scalar) and mad (vector of \eqn{J*(J+1)/2}) values
}
\description{
Group of functions to postprocess and plot model parameters of interest, compute WAIC
(Watanabe-Akaike Information Criterion) and MADs (Mean Absolute Deviation) for posterior predictive checks
and check normality assumptions.
}
\section{Functions}{
\itemize{
\item \code{iCARH.plotBeta}: Plot boxplots of posterior densities of \eqn{\beta} coefficients.

\item \code{iCARH.plotTreatmentEffect}: Plot boxplots of posterior densities of treatment effect coefficients.

\item \code{iCARH.plotPathwayPerturbation}: Plot posterior densities of pathway perturbation paramaters

\item \code{iCARH.checkNormality}: Check normality assumptions. Returns normalised data
and performs quantile-quantile plot

\item \code{iCARH.waic}: Compute Watanabe-Akaike Information Criterion (WAIC)

\item \code{iCARH.mad}: Compute MADs (Mean Absolute Deviation) between true covariance matrix
and inferred covariance matrix for posterior predictive checks
}}

\examples{
data.sim = iCARH.simulate(4, 20, 25, 3, 10, path.probs=0.3, Zgroupeff=c(0,4),
beta.val=c(1,-1,0.5, -0.5))
XX = data.sim$XX
Y = data.sim$Y
Z = data.sim$Z
pathways = data.sim$pathways
fit = iCARH.model(XX, Y, Z, pathways, control = list(adapt_delta = 0.99, max_treedepth=10),
iter = 1500, chains = 2)
gplot = iCARH.plotBeta(fit)

}
